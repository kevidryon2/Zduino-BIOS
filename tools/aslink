#!/usr/bin/env python

#Zduino-BIOS, the BIOS for the Zduino (A small board that uses a Z80).
#Copyright (C) 2022 kevidryon2
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published
#by the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with this program.  If not, see <https://www.gnu.org/licenses/>.


import sys

print("ZLINK Z80 linker")
if (len(sys.argv)<4):
    print("Usage: aslink <src-path> <zls-path> <build-path>")
    sys.exit(1)

try:
    zls = open(sys.argv[2], "r").readlines()
except:
    print("Unreadable file",sys.argv[2])
    sys.exit(1)

asmout = open(sys.argv[3]+"/out.asm", "w")

i = 0
line = ""
if not (sys.argv[2].endswith(".zls")):
    print("File must end with ZLS")
    exit()

while (line != "DONE"):
    line = zls[i]
    tokens = line.split()
    try:
        tokens[1] = tokens[1].replace("\n", "")
    except:
        print("Linked succesfully!")
        sys.exit(0)
    try:
        if (tokens[0] == "INCLUDE"):
            print("Including",tokens[1])
            asmfile = open(sys.argv[1]+"/"+tokens[1]+".asm", "r+b")
            asmout.write(asmfile.read())
        elif (tokens[0] == "ORG"):
            asmout.write("org "+tokens[1])
        else:
            print("Syntax error at:\n", line)
            break
    except:
        try:
            print("Cannot include file",sys.argv[1]+"/"+tokens[1]+".asm","\n", line)
            break
        except:
            print("Unexpected EOF")
            break
    tokens = line.split()
    i = i + 1
